<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="StartImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAC0AAAAtCAYAAAA6GuKaAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAS4AAAEuAXtxGk0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAACWElEQVRoQ9WZS04UURSGyxGwCkB5dMBNGKJjQlwFBLcgjbgMUKJLEXUCGhNHApIIjCEMUCHB75fT
        6VCcpqvoepz6ky+dus8/N6fvPXUrGURXSfIAHsMLeAuf4RhO4cp+9fwJVL8Ms9a9WjHxQ1iDA5C5vPyE
        VRi3IcsTk0zDe7gEz0xeLuAdTNoUxYlBR+A1/AFv8kH5Da9g2KYcTAyk1f0K3mRF8x0Gi3kGeAZnNmBV
        6M87ZxbyiY7Poaxw6IfCZcGsZBMdnkJdhjvIeLYVp2ELqg6JXihU7t5ZaKBd4pt1iMIX6L2rUKltzetY
        N6tm8aao0NZWdxz3QvE9YVa7olAnndchCptm9VoUKJco6mguCx353VyFByU/XsNotDuGlV4q6/IaRWOv
        Y1r5sNcgKi2ZVmLuVUZlSaY3U4XR2ZBpvSJ5lVHZkumjVGF0DmU6SnKUlVOZjn6opLls7Eo3LaZ/yfTH
        VGF0Psi0bn68yqisy3TTTsRFmW5k7tGkLO/H/yxP4kFXUl6jaLw0yzzxRgB6M/AaRuEvjJrla1Gg20uv
        cRTemNWuKJwEvfV6HermHB6Z1ZuiImpsr5jF26JyGKq61s3KNgyZRV80mILON5O6OYHblzSeaDgHdce3
        5n9ilrKJDgvW0RuwbDTvvFnJJzpqxasOFYVEvhVOiwG0Feq61ZugaHYgWwz3EwNpV9F3v7LCRfvwCty9
        S9xHDDoBuicp6sjX0ax83j84ihSTjEEb9sEz049d0MqO2ZDViolnYAk2YAsOQX8mmdOvnlW+DovQsq73
        VJL8A39TpGr6BhLYAAAAAElFTkSuQmCC
</value>
  </data>
  <data name="StopImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAS4AAAEuAXtxGk0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABJ0lEQVRoQ9XaTUpDMRhG4TvSvWhdqn+l4GZE92B1I9WhEr+XRCi3x6nmBB4Hp7F80VsncTlZrV2V
        +/JaPkr7Z5khs9yVzZgSVmvn5aF8FXqjGXyWXTkbU4/Vh38u9E0zeipHh+g/edo4s93P8HnmZ35sfpPH
        6TIHyAeWNhjc5gBvq2iyzwEOq2hyyAHoBQ+MJhhNMJpgNMFogtEEowlGE4wmGE0wmmA0wWiC0QSjCUYT
        jCYYTTCaYDTBaILRBKMJRhOMJhhNMJpgNMFogtEEo0l90V9w6K+YcgNOLxpc5wCbkitL2jCzcc3a74pz
        fU+bZrbtw2fl2r5f39PGGT2Wk/+XyCHym5j5ccps27Ia/nj1z8RN2Zf3Qm/0l/Jn/qVkposx5VjL8g1w
        zG7aFRQAlwAAAABJRU5ErkJggg==
</value>
  </data>
  <data name="PlayImage.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACsAAAAyCAYAAADFhCKTAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAAS4AAAEuAXtxGk0AAAAZdEVYdFNvZnR3YXJlAHd3dy5pbmtzY2FwZS5vcmeb7jwa
        AAABvUlEQVRoQ+3auy4EURzH8YlbSChoFB7ArfUASpVXEE9AKPAAlC6hlaiotKg1RIKIS6IhkahExCVI
        CL7/TWZjs387OzszZ84/8Us+7Zxf9jJ75n82UNKPFZzgARfYwSha4EWasYQvfP/hHuNoQG5pgrx6WkHN
        KQaRS+aglYqygS44SweeoJWpxjMm4OSjIZ9BrURcRxhAplmDtngtPrGINmSSA2gLJ3GDYaSeS2gLpmET
        qX4Br6EtlJYXTKEeiXMLbZG0pfIFvIN28Sx8QH4lW1FTHqFdOEtXGELsvEK7oAvr6ETVeYd2IVdkZzeG
        OkQm77KhXXSjYnwpK95Q8TbnU9nQPvpQFh/LCuk1iZL4Wja0iuL20/eyYgaFWCgrHXtgoqxYgJmyZzBT
        Vp4T/8tmQWYVZsrOw0RZ2TOYuXVNoxDfyy6juNf1tay89TItKomPZffQi7L4VNbM5tvEY02sB0ZTj+Km
        hhymxkeuBnOHSDyYMzXyNDVMNjWmN3UAIjdkbeG4nBwttSPJvdbpoZ1kFlqRKM6PQyWN2IZWSJPrQbNE
        jvBl6uH9Ef7vyKZXfhKPITuic2xhBDn+OSIIfgCl+5UDjOcaoAAAAABJRU5ErkJggg==
</value>
  </data>
</root>